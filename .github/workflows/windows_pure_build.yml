# Many of our rust dependencies won't build for Android on Windows if the NDK path contains a space
# This CI should list the issues that occur so we can iteratively fix them downstream
name: rsdroid (Windows - Path with spaces)
on: workflow_dispatch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Fetch submodules
        run: git submodule update --init --recursive

      - name: Configure JDK 1.11
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "11" # minimum for Android API31

      - name: Install Android Command Line Tools
        uses: android-actions/setup-android@v2

      - name: Install NDK (Windows - silent)
        if: matrix.os == 'windows-latest'
        run: |
          Write-Host "NDK Install Started"
          (. sdkmanager.bat --install "ndk;25.2.9519653" --sdk_root="$Env:ANDROID_SDK_ROOT") | out-null
          Write-Host "NDK Install Completed"

      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: 1.58.1
          override: true
          components: rustfmt

      # actions-rs only accepts "target" (although a "targets" param to be added in v2). We need 4 targets.
      - name: Install Rust Targets
        run: .github/scripts/install_rust_targets.sh

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install & Test Protobuf
        run: |
          Set-Alias -Name "python3" -Value "python"
          pip3 install --upgrade protobuf stringcase
          python3 .github/scripts/protoc_gen_deps.py

      - name: Rust Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            rslib-bridge/target
          key: ${{ runner.os }}-rust-v1-assembleRelease-${{ hashFiles('rslib-bridge/**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-v1-assembleRelease
            ${{ runner.os }}-rust-v1

      # Caching node modules and bazel, the bazel cache path on linux, mac and windows are according to following docs
      # https://docs.bazel.build/versions/main/output_directories.html
      - name: Node and Bazel cache
        uses: actions/cache@v2
        with:
          path: |
            C:/Users/runneradmin/_bazel_runneradmin
            anki/node_modules
          key: ${{ runner.os }}-v1-node-bazel-cache-${{ hashFiles('anki/package.json') }}-${{ hashFiles('anki/defs.bzl') }}
          restore-keys: |
            ${{ runner.os }}-v1-node-bazel-cache

      - name: Build
        run: | 
          ./tools/web/set-bash-win.ps1
          ./gradlew clean assembleRelease -DtestBuildType=release
