name: rsdroid (Windows)
on:
  push:
  schedule:
    - cron: "0 0 * * *"
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    steps:

    - uses: actions/checkout@v2
      with:
          submodules: 'true' # anki is a submodule

    # TODO: Ignore lines like we do in the Unix scripts, rather than all of them
    - name: Install NDK (silent)
      run: |
            Write-Host "NDK Install Started"
            Write-Host "ANDROID_HOME - $Env:ANDROID_HOME"
            Write-Host "ANDROID_SDK_ROOT - $Env:ANDROID_SDK_ROOT"

            (. "$Env:ANDROID_HOME\tools\bin\sdkmanager.bat" --install "ndk;22.0.7026061" --sdk_root="$Env:ANDROID_SDK_ROOT") | out-null

            Write-Host "NDK Install Completed"

    # bzip2-sys does not build when the value of CC_armv7-linux-androideabi contains a space
    # Setting this variable is a pain, as it contains a dash
    # It's easier to just move the directory and fix the environment variables to point to the new NDK
    # we change Program Files (x86) to "ProgramFiles"
    # TODO: Move the setting of environment variables here (permanently)
    - name: Move SDK to directory with no spaces
      run: |
             New-Item -ItemType directory -Path 'C:\ProgramFiles\Android'

             Get-ChildItem "$Env:ANDROID_SDK_ROOT"

             Move-Item -Path "$Env:ANDROID_SDK_ROOT" -Destination 'C:\ProgramFiles\Android' -ErrorAction Stop -Force

             Get-ChildItem 'C:\ProgramFiles\Android\android-sdk'


    - name: Debug Env
      run: |
            $Env:ANDROID_HOME
    
    # i18n did not seem to be handled
    - name: Init i18n submodule
      run: git submodule update --init --recursive

    - name: Install Rust
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: stable
        override: true

    # actions-rs only accepts "target" (although a "targets" param to be added in v2). We need 4 targets.
    - name: Install Rust Targets
      run: |
             rustup target add armv7-linux-androideabi 
             rustup target add i686-linux-android
             rustup target add aarch64-linux-android
             rustup target add x86_64-linux-android

    - name: Install & Test Protobuf Compiler
      run: |
              Set-Alias -Name "python3" -Value "python"
              pip3 install protobuf
              pip3 install protobuf-compiler
              python3 .github/scripts/protoc_gen_deps.py

    # -Dorg.gradle.daemon=false has been removed
    # -Dorg.gradle.console=plain has been removed
    #      env:
    #     ANDROID_HOME: "C:\\ProgramFiles\\Android\\android-sdk"
    #     ANDROID_NDK_HOME: "C:\\ProgramFiles\\Android\\android-sdk\\ndk-bundle"
    #     ANDROID_NDK_PATH: "C:\\ProgramFiles\\Android\\android-sdk\\ndk-bundle"
    #     ANDROID_SDK_ROOT: "C:\\ProgramFiles\\Android\\android-sdk"
    - name: Build
      run: |
             $Env:ANDROID_HOME = "C:\ProgramFiles\Android\android-sdk"
             $Env:ANDROID_NDK_HOME =  "C:\ProgramFiles\Android\android-sdk\ndk-bundle"
             $Env:ANDROID_NDK_PATH =  "C:\ProgramFiles\Android\android-sdk\ndk-bundle"
             $Env:ANDROID_SDK_ROOT =  "C:\ProgramFiles\Android\android-sdk"
             $env:ANDROID_HOME
             ./gradlew clean assembleRelease -DtestBuildType=release # assembleAndroidTest