name: Build release (from macOS)
on:
  workflow_dispatch:
    inputs:
      mavenPublish:
        description: "Publish artifacts to Maven Central? non-empty to publish, empty to skip publish"
        required: false
        type: string
  schedule:
    - cron: "0 0 * * *"
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - main

env:
  ALL_ARCHS: 1
  RELEASE: 1
  CARGO_PROFILE_RELEASE_LTO: fat

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-release
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-13
    timeout-minutes: 180
    steps:
      - uses: actions/checkout@v4

      - name: Fetch submodules
        run: git submodule update --init

      - name: Set NDK version
        run: echo "ANDROID_NDK_HOME=$ANDROID_NDK_LATEST_HOME" >> $GITHUB_ENV

      - name: Configure JDK
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "17" # matches Anki-Android

      - name: Install Windows cross compiler
        run: brew install mingw-w64 && x86_64-w64-mingw32-gcc -v

      - name: Install Linux cross compiler
        run: |
          brew tap SergioBenitez/osxct
          brew install x86_64-unknown-linux-gnu
          x86_64-unknown-linux-gnu-gcc -v

      - name: Restore Rust Cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            anki/out/rust
            anki/out/extracted
            anki/out/node_modules
          key: ${{ runner.os }}-rust-release-v6-${{ hashFiles('Cargo.lock') }}-${{ hashFiles('anki/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-release-v6

      - name: Setup N2
        run: ./anki/tools/install-n2

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        timeout-minutes: 5
        with:
          # Only write to the cache for builds on the 'main' branches, stops branches evicting main cache
          # Builds on other branches will only read from main branch cache writes
          # Comment this and the with: above out for performance testing on a branch
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}
          gradle-home-cache-cleanup: true

      - name: Build all
        run: ./build.sh

      - name: Upload rsdroid AAR as artifact
        uses: actions/upload-artifact@v3
        with:
          name: rsdroid-aar
          if-no-files-found: error
          path: rsdroid/build/outputs/aar

      - name: Upload rsdroid-robo JAR as artifact
        uses: actions/upload-artifact@v3
        with:
          name: rsdroid-robo
          if-no-files-found: error
          path: rsdroid-testing/build/libs

      # following steps only run on workflow dispatch

      - name: Publish AAR to Maven
        if: "${{ github.event.inputs.mavenPublish != '' && github.event_name == 'workflow_dispatch'}}"
        env:
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: david-allison-1
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
        run: |
          ./gradlew rsdroid:publishAllPublicationsToMavenCentral -DtestBuildType=release -Dorg.gradle.daemon=false -Dorg.gradle.console=plain

      - name: Publish JAR to Maven
        if: "${{ github.event.inputs.mavenPublish != '' && github.event_name == 'workflow_dispatch'}}"
        env:
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: david-allison-1
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
        run: |
          export ANKIDROID_LINUX_CC=x86_64-unknown-linux-gnu-gcc
          export ANKIDROID_MACOS_CC=cc
          export RUST_DEBUG=1
          export RUST_BACKTRACE=1
          export RUST_LOG=trace
          export NO_CROSS=true
          ./gradlew rsdroid-testing:publishAllPublicationsToMavenCentral -Dorg.gradle.project.macCC=$ANKIDROID_MACOS_CC -DtestBuildType=debug -Dorg.gradle.daemon=false -Dorg.gradle.console=plain

      - name: Save Rust Cache
        uses: actions/cache/save@v3
        if: github.ref == 'refs/heads/main'
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            anki/out/rust
            anki/out/download
            anki/out/node_modules
          key: ${{ runner.os }}-rust-release-v6-${{ hashFiles('Cargo.lock') }}-${{ hashFiles('anki/yarn.lock') }}
