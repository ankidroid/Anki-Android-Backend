@startuml
actor       actor       as user
participant RustDroidBackend as RustDroidBackend
boundary "Anki-Android-Backend"
participant BackendUtils
participant BackendV1Impl as RustBackend
participant    NativeMethods.java    as NativeMethods
boundary "rslib-bridge"
participant lib.rs as rslibbridge
boundary "anki"
participant rslib as anki_backend
group Anki-Android


user -> RustDroidBackend : openCollectionDatabase(path) 
RustDroidBackend -> RustDroidBackend: create Db Instance & getDatabase()
RustDroidBackend -> BackendUtils : openAnkiDroidCollection(path)
BackendUtils -> BackendUtils: convert path to proto
BackendUtils -> RustBackend : openAnkiDroidCollection(OpenCollectionIn)

    group Obtain pointer (one time)
    RustBackend -> RustBackend: ensureBackend()
    RustBackend -> NativeMethods: openBackend()
    NativeMethods -> rslibbridge: openBackend()
    rslibbridge -> NativeMethods: return pointer
    NativeMethods -> RustBackend: persist pointer
    end

    group Open Collection
    RustBackend -> NativeMethods: openCollection(ptr, byte[])
    NativeMethods -> rslibbridge: openCollection
    rslibbridge -> rslibbridge: decode ptr
    rslibbridge -> rslibbridge: decode proto
    rslibbridge -> rslibbridge: open_collection_ankidroid
    rslibbridge -> rslibbridge: open_or_create_no_update
    rslibbridge -> rslibbridge: ptr can be used to access col
    rslibbridge -> NativeMethods: byte[]
    NativeMethods -> RustBackend: byte[]
    RustBackend -> RustBackend: Check for error
    RustBackend -> RustBackend: Response is Generic.Empty.\nReturn void
    end
    
RustBackend -> user

@enduml